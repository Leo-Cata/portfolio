[
  {
    "img": "./backlogged.png",
    "chips": [
      { "name": "<React/>", "bg": "bg-react" },
      { "name": "<TypeScript/>", "bg": "bg-typescript" },
      { "name": "<Mui/>", "bg": "bg-mui" },
      { "name": "<TailwindCSS/>", "bg": "bg-tailwind" },
      { "name": "<React-Router-Dom/>", "bg": "bg-router" },
      { "name": "<Axios/>", "bg": "bg-axios" },
      { "name": "<Firebase/>", "bg": "bg-firebase" },
      { "name": "<Swiper.js/>", "bg": "bg-swiper" }
    ],
    "title": "Backlogged",
    "description": "Esta aplicación hecha con <span>React</span> y <span>TypeScript</span>  integra una <span>API</span>  de videojuegos mediante <span>Axios</span>, utiliza la librearía de components <span>MUI</span>  y <span>TailwindCSS</span>  para estilizaciones menores.<br/> Por otro lado, se utiliza <span>Firebase</span>  por sus servicios de <span>Autenticación</span>  y <span>base de datos</span>. Esta aplicación web permite a los usuarios iniciar sesión con su cuenta de Google y agregas juegos a su lista de pendientes o 'backlog'. Estos juegos se almacenan en Firebase para luego, mostrarlos en su perfil privado. La aplicación incorpora un sistema para escribir, leer y borrar información de la base de datos de Firebase, permitiendo a los usuarios gestionar sus juegos pendientes. Adicionalmente, desde la pagina de su perfil, los usuarios pueden borrar su 'backlog' y/o sus cuentas completamente de la base de datos.<br/>Juegos guardados en dicha lista tienen un icono de 'guardado' el cual permanece consistentemente a lo largo de la aplicación.<br/> Para la navegación y pase de estado entre paginas, se utilizo <span>React-Router-Dom</span>. <span>Swiper.js</span> es utilizado para mostrar imágenes en formato carrusel",
    "links": [
      { "name": "Site", "link": "https://backlogged.netlify.app/" },
      { "name": "GitHub", "link": "https://github.com/Leo-Cata/rawg-app" }
    ]
  },
  {
    "img": "./psh.png",
    "chips": [
      { "name": "<React/>", "bg": "bg-react" },
      { "name": "<TypeScript/>", "bg": "bg-typescript" },
      { "name": "<Mui/>", "bg": "bg-mui" },
      { "name": "<TailwindCSS/>", "bg": "bg-tailwind" },
      { "name": "<React-Router-Dom/>", "bg": "bg-router" },
      { "name": "<Axios/>", "bg": "bg-axios" }
    ],
    "title": "Phone Specs Hub",
    "description": "Moving into something more complex, in this fully responsive web app, the user can find out the latest released phones, search the phone brands or a general search in the database. When navigation to a phone page, the phone specifications are displayed in accordions, giving the user technical information about the phone. this web app integrates a cellphones database <span>API</span>. <br/> For this project, I decided to learn <span>MUI</span> and it's vast library of pre-made components, focusing more on the logic and <span>TypeScript</span>, rather than the design. <br/> The data is fetched using <span>Axios</span>, <span>React-Router-Dom</span> is being used for SPA navigation, and <span>TailwindCSS</span> for minor styling using .",
    "links": [
      { "name": "Site", "link": "https://phonespecshub.netlify.app/" },
      {
        "name": "GitHub",
        "link": "https://github.com/Leo-Cata/phone-specs-hub"
      }
    ]
  },
  {
    "img": "network.png",
    "chips": [
      { "name": "<React/>", "bg": "bg-react" },
      { "name": "<TypeScript/>", "bg": "bg-typescript" },
      { "name": "<TailwindCSS/>", "bg": "bg-tailwind" },
      { "name": "<Framer Motion/>", "bg": "bg-framer" }
    ],
    "title": "Network Agency Landing Page",
    "description": "Landing page of a fictional network agency, designed based on a <span>Figma</span> web design. <br/> With this project, I instead used <span>TypeScript</span> to gain a basic understanding of its fundamental, utilizing for different arrays which are mapped. <br/> <span>Framer Motion</span> was used for different animations, <span>TailwindCSS</span> for the styles, and <span>React</span> along with some <span>Hooks</span>. This is a <span>fully responsive</span> website, containing a <span>carousel</span>, an <span>accordion</span> style faq section and a mobile menu animated.",
    "links": [
      { "name": "Site", "link": "https://networkagency-leomat.netlify.app/" },
      { "name": "GitHub", "link": "https://github.com/Leo-Cata/Network-Agency" }
    ]
  },
  {
    "img": "./dialect.png",
    "chips": [
      { "name": "<React/>", "bg": "bg-react" },
      { "name": "<JavaScript/>", "bg": "bg-javascript" },
      { "name": "<TailwindCSS/>", "bg": "bg-tailwind" }
    ],
    "title": "Dialect Landing Page",
    "description": "Landing page of a fictional language learning site, designed based on a <span>Figma</span> web design. <br/> I started this project after completing a bootcamp and doing some tutorial projects. It was my way of diving into independent projects, specifically to get better at <span>CSS</span>, using only <span>TailwindCSS</span>, <span>JavaScript</span>, and <span>React</span> to create this landing page. <br/> The website features a <span>fully responsive</span> design, utilizes the <span>useState</span> and <span>useContext</span> hooks to manage language synchronization within the dropdown menu. Additionally, it includes a <span>carousel</span> that displays 1 to 3 cards based on the viewport width.",
    "links": [
      { "name": "Site", "link": "https://dialect-leomat.netlify.app/" },
      {
        "name": "GitHub",
        "link": "https://github.com/Leo-Cata/Dialect-Project"
      }
    ]
  }
]
